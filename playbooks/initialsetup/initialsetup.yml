- name: VPS - Initial setup
  hosts: virtualservers, raspberry

  tasks:
  ## Initial setup
    - name: Set hostname
      become: true
      hostname:
        name: "{{ inventory_hostname }}"

    - name: APT - Set DEBIAN_FRONTEND to noninteractive
      shell: export DEBIAN_FRONTEND=noninteractive
      environment:
        DEBIAN_FRONTEND: noninteractive

    - name: APT - Update packages
      become: true
      apt:
        upgrade: true

  ## Install Oh My Zsh
    - name: APT - Install Zsh
      become: true
      tags: [ 'shell' ]
      package:
        name: 'zsh'
        state: present

    - name: Check if Oh My Zsh is installed (1/2)
      become_user: "{{ ansible_user }}"
      tags: [ 'shell' ]
      stat:
        path: ~/.oh-my-zsh
      register: ohmyzsh_installed

    #- name: Debug ohmyzsh_installed variable
    #  debug:
    #    var: ohmyzsh_installed

    - name: SHELL - Install Oh My Zsh
      become_user: "{{ ansible_user }}"
      tags: [ 'shell' ]
      when: ohmyzsh_installed.stat.exists != True
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

    - name: Check if Oh My Zsh is installed (2/2)
      become_user: "{{ ansible_user }}"
      tags: [ 'shell' ]
      stat:
        path: ~/.oh-my-zsh
      register: ohmyzsh_installed

    - name: Set ZSH_THEME in .zshrc
      become_user: "{{ ansible_user }}"
      tags: [ 'shell' ]
      when: ohmyzsh_installed.stat.exists == True
      lineinfile:
        path: ~/.zshrc
        regexp: '^ZSH_THEME='
        line: 'ZSH_THEME="agnoster"'
        state: present

    - name: Set Zsh as default shell for user
      become: true
      tags: [ 'shell' ]
      when: ohmyzsh_installed.stat.exists == True
      command: usermod --shell /bin/zsh "{{ ansible_user }}"
      changed_when: false

  ## Install Zsh plugins (Zoxide)
    - name: APT - Install dependencies for Zoxide
      become: true
      tags: [ 'shell' ]
      package:
        name: 'fzf'
        state: present

    - name: Check if Zoxide is installed (1/2)
      become_user: "{{ ansible_user }}"
      tags: [ 'shell' ]
      stat:
        path: ~/.local/bin/zoxide
      register: zoxide_check

    - name: SHELL - Install Zoxide for Zsh
      become_user: "{{ ansible_user }}"
      tags: [ 'shell' ]
      when: zoxide_check.stat.exists == False
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ajeetdsouza/zoxide/master/install.sh)"

    - name: Check if Zoxide is installed (2/2)
      become_user: "{{ ansible_user }}"
      tags: [ 'shell' ]
      stat:
        path: ~/.local/bin/zoxide
      register: zoxide_check

    - name: Add ~/.local/bin to PATH
      become_user: "{{ ansible_user }}"
      tags: [ 'shell' ]
      when: zoxide_check.stat.exists == True
      lineinfile:
        path: ~/.zshrc
        line: 'export PATH="$HOME/.local/bin:$PATH"'
        state: present

    - name: Add Zoxide to .zshrc
      become_user: "{{ ansible_user }}"
      tags: [ 'shell' ]
      when: zoxide_check.stat.exists == True
      lineinfile:
        path: ~/.zshrc
        line: 'eval "$(zoxide init zsh)"'
        state: present

  ## Add aliases to .zshrc
    - name: Add docker alias to .zshrc
      become_user: "{{ ansible_user }}"
      tags: [ 'docker' ]
      lineinfile:
        path: ~/.zshrc
        line: 'alias d="docker"'
        state: present

    - name: Add docker compose alias to .zshrc
      become_user: "{{ ansible_user }}"
      tags: [ 'docker' ]
      lineinfile:
        path: ~/.zshrc
        line: 'alias dc="docker compose"'
        state: present

    - name: Add docker compose up alias to .zshrc
      become_user: "{{ ansible_user }}"
      tags: [ 'docker' ]
      lineinfile:
        path: ~/.zshrc
        line: 'alias dcu="docker compose up -d"'
        state: present

    - name: Add docker compose up with logs alias to .zshrc
      become_user: "{{ ansible_user }}"
      tags: [ 'docker' ]
      lineinfile:
        path: ~/.zshrc
        line: 'alias dcul="docker compose up -d && docker compose logs -f"'
        state: present

  ## Install Docker
    - name: APT - Install dependencies for Docker
      become: true
      tags: [ 'docker' ]
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    # Remove old config file used in previous version of playbook
    - name: Remove Docker repository configuration file
      become: true
      tags: [ 'docker' ]
      file:
        path: /etc/apt/sources.list.d/download_docker_com_linux_ubuntu.list
        state: absent
      ignore_errors: yes

    # Remove old config file used in older docker versions
    - name: Remove Docker repository configuration file
      become: true
      tags: [ 'docker' ]
      file:
        path: /etc/apt/sources.list.d/docker.list
        state: absent
      ignore_errors: yes

    - name: Make sure /etc/apt/keyrings exists
      become: true
      tags: [ 'docker' ]
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: UBUNTU - Download Docker GPG key
      become: true
      tags: [ 'docker' ]
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
      when: ansible_distribution == 'Ubuntu'

    - name: DEBIAN - Download Docker GPG key
      become: true
      tags: [ 'docker' ]
      get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: '0644'
      when: ansible_distribution == 'Debian'

    - name: UBUNTU - Add Docker APT repository
      become: true
      tags: [ 'docker' ]
      apt_repository:
        repo: "deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
        update_cache: yes
      when: ansible_distribution == 'Ubuntu'

    - name: DEBIAN - Add Docker APT repository
      become: true
      tags: [ 'docker' ]
      apt_repository:
        repo: "deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
        update_cache: yes
      when: ansible_distribution == 'Debian'

    - name: APT - Install docker-ce
      become: true
      tags: [ 'docker' ]
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
        update_cache: true

    - name: Create docker directory
      become_user: "{{ ansible_user }}"
      tags: [ 'docker' ]
      file:
        path: ~/docker
        state: directory

    - name: Add ansible_user to docker group
      become: true
      tags: [ 'docker' ]
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

  ## Set default motd
    - name: APT - Install dependencies for motd
      become: true
      tags: [ 'motd' ]
      package:
        name: 
          - figlet
          - lolcat
        state: present

    - name: Ensure motd directory is empty
      become: true
      tags: [ 'motd' ]
      file:
        path: /etc/update-motd.d/
        state: absent

    - name: Create motd directory
      become: true
      tags: [ 'motd' ]
      file:
        path: /etc/update-motd.d/
        state: directory

    - name: Set default motd
      become: true
      tags: [ 'motd' ]
      copy:
        src: motdfiles/
        dest: /etc/update-motd.d/
        owner: root
        group: root
        mode: '0655'
