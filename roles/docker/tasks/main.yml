## Add aliases to .zshrc
- name: Add docker alias to .zshrc
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    line: 'alias d="docker"'
    state: present

- name: Add docker compose alias to .zshrc
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    line: 'alias dc="docker compose"'
    state: present

- name: Add docker compose up alias to .zshrc
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    line: 'alias dcu="docker compose up -d"'
    state: present

- name: Add docker compose up with logs alias to .zshrc
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    line: 'alias dcul="docker compose up -d && docker compose logs -f"'
    state: present

## Install Docker
- name: Install dependencies for Docker
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - apt-transport-https
    - ca-certificates
    - curl
    - software-properties-common
    - python3-pip
    - virtualenv
    - python3-setuptools

- name: Check if Docker is installed
  ansible.builtin.command:
    cmd: docker --version
  register: docker_installed
  ignore_errors: true
  changed_when: false

- name: Set Docker installation required
  ansible.builtin.set_fact:
    install_docker: "{{ docker_installed.rc != 0 }}"

# Remove old config file used in previous version of playbook
- name: Remove Docker repository configuration file
  become: true
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/download_docker_com_linux_ubuntu.list
    state: absent
  failed_when: false
  when: install_docker

- name: Remove Docker repository configuration file
  become: true
  ansible.builtin.file:
    path: /etc/apt/sources.list.d/docker.list
    state: absent
  failed_when: false
  when: install_docker

- name: Make sure /etc/apt/keyrings exists
  become: true
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: UBUNTU - Download Docker GPG key
  become: true
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
  when: ansible_distribution == 'Ubuntu'

- name: DEBIAN - Download Docker GPG key
  become: true
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
  when: ansible_distribution == 'Debian'

- name: UBUNTU - Add Docker APT repository
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu   {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
    update_cache: true
  when: ansible_distribution == 'Ubuntu'

- name: DEBIAN - Add Docker APT repository
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [arch=arm64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian   {{ ansible_distribution_release }} stable"
    state: present
    filename: docker
    update_cache: true
  when: ansible_distribution == 'Debian'

- name: Install docker packages
  become: true
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present
    update_cache: true
  with_items:
    - docker-ce
    - docker-ce-cli
    - containerd.io
    - docker-buildx-plugin
    - docker-compose-plugin

- name: Create docker directory
  become: true
  become_user: "{{ ansible_user }}"
  ansible.builtin.file:
    path: ~/docker
    state: directory
    mode: '0775'

- name: Add ansible_user to docker group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Copy docker daemon configuration
  become: true
  ansible.builtin.template:
    src: daemon.json
    dest: /etc/docker/daemon.json
    mode: '0644'
  notify: Restart Docker
